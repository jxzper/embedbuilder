{"version":3,"sources":["Components/Header/index.jsx","Components/Footer/index.jsx","Components/Builder/Color/index.jsx","Components/Builder/Author/index.jsx","Components/Builder/Title/index.jsx","Components/Builder/Description/index.jsx","Components/Builder/Thumbnail/index.jsx","Components/Builder/Fields/index.jsx","Components/Builder/Image/index.jsx","Components/Builder/Footer/index.jsx","Components/Builder/Content/index.jsx","Components/Builder/index.jsx","Components/Output/index.jsx","Components/Main/index.jsx","Components/App/index.jsx","registerServiceWorker.js","index.js","Components/constants.js"],"names":["Header","render","id","href","title","React","PureComponent","Footer","Component","Color","props","handleClick","setState","displayColorPicker","state","handleClose","handleChangeComplete","color","event","hex","intColor","Math","round","rgb","r","g","b","document","getElementById","style","className","type","name","placeholder","value","this","onClick","cursor","readOnly","position","zIndex","top","right","bottom","left","backgroundColor","disableAlpha","onChangeComplete","Author","URL","iconURL","target","classNames","trim","split","length","RegEx","test","push","splice","indexOf","Set","join","imageURL","onChange","updateIconURL","maxLength","updateName","updateURL","Title","updateTitle","Description","description","rows","updateDescription","Thumbnail","thumbnailURL","updateThumbnailURL","Fields","button","fields","index","children","setAttribute","removeAttribute","insertAdjacentHTML","field","parentNode","removeChild","addField","role","aria-label","removeField","Image","updateImageURL","text","Content","content","updateContent","Output","e","embed","elements","concat","url","authorUrl","authorIconUrl","authorName","author","fieldsChildren","i","fieldName","fieldValue","fieldInline","checked","parseInt","toString","padStart","thumbnail","image","timestampChecked","timestamp","footerText","footerIconUrl","footer","innerHTML","embedOutput","replace","element","selections","range","body","createTextRange","moveToElementText","select","execCommand","window","getSelection","createRange","selectNode","addRange","console","error","generateEmbedCode","copyData","JSON","stringify","embedObject","Main","Builder","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","exports"],"mappings":"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","file":"static/js/main.9edcbce8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Header extends React.PureComponent {\n  render = () => (\n    <header>\n      <div id=\"back-to-home\">\n        <a href=\"https://jxzper.github.io\">&larr;</a>\n      </div>\n      <div title=\"jxzper.github.io\">jxzper.github.io</div>\n    </header>\n  );\n}\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>     \n        <a href=\"https://github.com/TheBastionBot/embedbuilder\">Credits to: The Bastion Bot</a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { ChromePicker } from 'react-color';\n\nclass Color extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '#4f545c',\n      intColor: 0,\n      displayColorPicker: false\n    };\n  }\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChangeComplete = (color, event) => {\n    this.setState({\n      color: color.hex,\n      intColor: 256 * 256 * Math.round(color.rgb.r) + 256 * Math.round(color.rgb.g) + Math.round(color.rgb.b)\n    });\n    document.getElementById('builder-container').style['border-left'] = `5px solid ${color.hex}`;\n  }\n\n  render() {\n    return(\n      <div className=\"embed-group embed-color\">\n        <input\n          id = \"color\"\n          type = \"text\"\n          name = \"color\"\n          placeholder = \"Embed Color\"\n          value = { this.state.intColor }\n          onClick = { this.handleClick }\n          style = {{\n            cursor: 'pointer'\n          }}\n          readOnly\n        />\n\n        {\n          this.state.displayColorPicker ?\n            <div\n              style = {{\n                position: 'absolute',\n                zIndex: 2\n              }}\n            >\n              <div\n                style={{\n                  position: 'fixed',\n                  top: '0px',\n                  right: '0px',\n                  bottom: '0px',\n                  left: '0px',\n                  backgroundColor: 'rgba(0, 0, 0, .15)'\n                }}\n                onClick={ this.handleClose }/>\n              <ChromePicker\n                color = { this.state.color }\n                disableAlpha = { true }\n                onChangeComplete = { this.handleChangeComplete }\n              />\n            </div>\n          : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Color;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Author extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      URL: '',\n      iconURL: ''\n    };\n  }\n\n  updateName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  updateURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.URL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      URL: event.target.value\n    });\n  }\n\n  updateIconURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      iconURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-author\">\n        <div className = \"embed-author-icon\">\n          <input\n            type = \"url\"\n            name = \"author:icon_url\"\n            placeholder = \"Author Icon URL\"\n            value = {this.state.iconURL}\n            onChange = {event => this.updateIconURL(event)}\n          />\n        </div>\n        <div className=\"embed-author-name\">\n          <input\n            type = \"text\"\n            name = \"author:name\"\n            placeholder = \"Author Name\"\n            maxLength = \"256\"\n            value = {this.state.name}\n            onChange = {event => this.updateName(event)}\n          />\n        </div>\n        <div className=\"embed-author-url\">\n          <input\n            type = \"url\"\n            name = \"author:url\"\n            placeholder = \"Author URL\"\n            value = {this.state.URL}\n            onChange = {event => this.updateURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Author;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      URL: ''\n    };\n  }\n\n  updateTitle(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  updateURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.URL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      URL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-title\">\n        <div className = \"embed-title-text\">\n          <input\n            type = \"text\"\n            name = \"title\"\n            placeholder = \"Title\"\n            maxLength=\"256\"\n            value = {this.state.title}\n            onChange = {event => this.updateTitle(event)}\n          />\n        </div>\n        <div className=\"embed-title-url\">\n          <input\n            type=\"url\"\n            name=\"url\"\n            placeholder=\"URL\"\n            value = {this.state.URL}\n            onChange = {event => this.updateURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React from 'react';\n\nclass Description extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: ''\n    };\n  }\n\n  updateDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-description\">\n        <textarea\n          name = \"description\"\n          placeholder = \"Description\"\n          maxLength = \"2000\"\n          rows = \"5\"\n          value = {this.state.description}\n          onChange = {event => this.updateDescription(event)}\n        >\n        </textarea>\n      </div>\n    );\n  }\n}\n\nexport default Description;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Thumbnail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thumbnailURL: ''\n    };\n  }\n\n  updateThumbnailURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      thumbnailURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-thumbnail\">\n        <div className = \"embed-thumbnail-url\">\n          <input\n            type = \"url\"\n            name = \"thumbnail:url\"\n            placeholder = \"Thumbnail URL\"\n            value = {this.state.thumbnailURL}\n            onChange = {event => this.updateThumbnailURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thumbnail;\n","import React from 'react';\n\nclass Fields extends React.Component {\n  addField(button) {\n    let fields = document.getElementById('fields');\n    let index = fields.children.length;\n\n\n    if (index >= 24) {\n      button.setAttribute('disabled', true);\n    }\n    else {\n      button.removeAttribute('disabled');\n    }\n\n    fields.insertAdjacentHTML('beforeend',\n      `<div id=\"field-${index}\" class=\"embed-group\" style=\"display: inline-block; margin-top: 0; width: 50%\">\n         <div class=\"field\">\n           <input type=\"text\" name=\"field-${index}:name\" maxlength=\"256\" placeholder=\"Field ${index + 1} Name\" />\n           <textarea name=\"field-${index}:value\" maxlength=\"1024\" rows=\"2\" placeholder=\"Field ${index +1} Description\"></textarea>\n           <label>\n             <input type=\"checkbox\" name=\"field-${index}:inline\" onChange=\"let field = document.getElementById(this.name.replace(':inline', '')); this.checked ? field.setAttribute('style', 'display: inline-block; margin-top: 0; width: 50%;') : field.removeAttribute('style')\"} checked />\n             <span>Inline</span>\n           </label>\n         </div>\n       </div>`);\n\n    let removeBtn = document.getElementById('btn-removeField');\n    removeBtn.removeAttribute('disabled');\n  }\n\n  removeField(button) {\n    let fields = document.getElementById('fields');\n    let index = fields.children.length;\n\n    if (index - 1) {\n      button.removeAttribute('disabled');\n    }\n    else {\n      button.setAttribute('disabled', true);\n    }\n\n    let field = document.getElementById(`field-${index - 1}`);\n    if (field) {\n      field.parentNode.removeChild(field);\n    }\n\n    let addBtn = document.getElementById('btn-addField');\n    addBtn.removeAttribute('disabled');\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-fields\">\n        <div id = \"fields\"></div>\n        <div className = \"embed-group-controls\">\n          <button\n            id = \"btn-addField\"\n            type = \"button\"\n            onClick = {event => this.addField(event.target)}\n          >\n            <span role = \"img\" aria-label = \"Add Emoji\">➕</span>&ensp;\n            Add Field\n          </button>\n          <button\n            id = \"btn-removeField\"\n            type = \"button\"\n            onClick = {event => this.removeField(event.target)}\n          >\n            <span role = \"img\" aria-label = \"Remove Emoji\">➖</span>&ensp;\n            Remove Field\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fields;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageURL: ''\n    };\n  }\n\n  updateImageURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      imageURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-image\">\n        <div className = \"embed-image-url\">\n          <input\n            type = \"url\"\n            name = \"image:url\"\n            placeholder = \"Image URL\"\n            value = {this.state.imageURL}\n            onChange = {event => this.updateImageURL(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Image;\n","import React from 'react';\nimport { RegEx } from '../../constants';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      iconURL: ''\n    };\n  }\n\n  updateText(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  updateIconURL(event) {\n    let classNames = event.target.className.trim().split(' ');\n    if (event.target.value.length && !RegEx.imageURL.test(event.target.value)) {\n      classNames.push('invalid');\n    }\n    else {\n      classNames.splice(classNames.indexOf('invalid'), 1);\n    }\n    event.target.className = [ ...new Set(classNames) ].join(' ').trim();\n\n    this.setState({\n      iconURL: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className = \"embed-group embed-footer\">\n        <div className = \"embed-footer-icon\">\n          <input\n            type = \"url\"\n            name = \"footer:icon_url\"\n            placeholder = \"Footer Icon URL\"\n            value = {this.state.iconURL}\n            onChange = {event => this.updateIconURL(event)}\n          />\n        </div>\n        <div className=\"embed-footer-name\">\n          <input\n            type = \"text\"\n            name = \"footer:text\"\n            placeholder = \"Footer Text\"\n            maxLength = \"256\"\n            value = {this.state.name}\n            onChange = {event => this.updateName(event)}\n          />\n        </div>\n        <div className=\"embed-timestamp\">\n          <label>\n            <input\n              name = \"timestamp\"\n              type = \"checkbox\"\n            />\n            Add Timestamp\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\r\n\r\nclass Content extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: ''\r\n    };\r\n  }\r\n\r\n  updateContent(event) {\r\n    this.setState({\r\n      content: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className = \"embed-group embed-content\">\r\n        <textarea\r\n          name = \"content\"\r\n          placeholder = \"Content\"\r\n          maxLength = \"2000\"\r\n          rows = \"5\"\r\n          value = {this.state.content}\r\n          onChange = {event => this.updateContent(event)}\r\n        >\r\n        </textarea>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\nimport Color from './Color';\nimport Author from './Author';\nimport Title from './Title';\nimport Description from './Description';\nimport Thumbnail from './Thumbnail';\nimport Fields from './Fields';\nimport Image from './Image';\nimport Footer from './Footer';\nimport Content from './Content';\n\nclass Output extends React.Component {\n  render() {\n    return(\n      <div className=\"cell\">\n        <div id=\"builder-container\">\n          <form id=\"embed-builder\">\n            <div className=\"embed\">\n              <div className=\"embed-content\">\n                <div className=\"embed-content-inner\">\n\n                  <Content />\n                  <Color />\n                  <Author />\n                  <Title />\n                  <Description />\n                  <Thumbnail />\n                  <Fields />\n                  <Image />\n\n                </div>\n              </div>\n\n              <Footer />\n\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Output;\n","import React from 'react';\n\nclass Output extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  generateEmbedCode() {\n    var e = document.getElementById(\"embed-builder\"),\n    embed = [\"{embed}\"],\n\n    content = e.elements.content.value;\n    content && embed.push(\"{content: \".concat(content, \"}\"));\n\n    var title = e.elements.title.value;\n    title && embed.push(\"{title: \".concat(title, \"}\"));\n\n    var description = e.elements.description.value;\n    description && embed.push(\"{description: \".concat(description, \"}\"));\n\n    var url = e.elements.url.value;\n    url && embed.push(\"{url: \".concat(url, \"}\"));\n\n    var authorUrl = e.elements[\"author:url\"].value,\n      authorIconUrl = e.elements[\"author:icon_url\"].value,\n      authorName = e.elements[\"author:name\"].value;\n    if (authorName) {\n      var author = \"author: \".concat(authorName);\n      authorIconUrl && (author += \" && \".concat(authorIconUrl));\n      if (authorIconUrl){\n        authorUrl && (author += \" && \".concat(authorUrl));\n      }\n      embed.push(\"{\".concat(author, \"}\"));\n    }\n\n    var fieldsChildren = document.getElementById(\"fields\").children;\n    if (fieldsChildren.length)\n      for (var i = 0; i < fieldsChildren.length; i++) {\n        var fieldName = e.elements[\"field-\".concat(i, \":name\")].value,\n          fieldValue = e.elements[\"field-\".concat(i, \":value\")].value,\n          fieldInline = e.elements[\"field-\".concat(i, \":inline\")].checked;\n        if (fieldName && fieldValue) {\n          var field = \"field: \".concat(fieldName, \" && \").concat(fieldValue);\n          fieldInline && (field += \" && inline\");\n          embed.push(\"{\".concat(field, \"}\"));\n        }\n      }\n\n    var color = e.elements.color.value;\n    color &&\n      \"#000000\" !==\n        (color = \"\".concat(\n          parseInt(color, 10).toString(16).padStart(6, \"0\")\n        )) &&\n      embed.push(\"{color: #\".concat(color, \"}\"));\n\n    var thumbnail = e.elements[\"thumbnail:url\"].value;\n    thumbnail && embed.push(\"{thumbnail: \".concat(thumbnail, \"}\"));\n\n    var image = e.elements[\"image:url\"].value;\n    image && embed.push(\"{image: \".concat(image, \"}\"));\n    \n    var timestampChecked = e.elements.timestamp.checked\n\n    var footerText = e.elements[\"footer:text\"].value,\n    footerIconUrl = e.elements[\"footer:icon_url\"].value;\n    if (footerText || footerIconUrl) {\n      var footer = \"footer: \".concat(footerText)\n      footerIconUrl && (footer += \" && \".concat(footerIconUrl));\n      embed.push(\"{\".concat(footer, \"}\"));\n    }\n    \n    timestampChecked && embed.push(\"{timestamp}\");\n    embed = embed.join(\"$v\");\n    document.getElementById(\"embed-output\").innerHTML = embed;\n\n    let embedOutput = document.getElementById('embed-output').innerHTML;\n    embedOutput = embedOutput.replace(/\"([\\w]*)\":/g, '<span class=\"highlight key\">\"$1\"</span>:');\n    embedOutput = embedOutput.replace(/(\\d*),/g, '<span class=\"highlight number\">$1</span>,');\n    embedOutput = embedOutput.replace(/: (true|false)/g, ': <span class=\"highlight boolean\">$1</span>');\n    embedOutput = embedOutput.replace(/: \"(.*?)\"/g, ': <span class=\"highlight string\">\"$1\"</span>');\n    document.getElementById('embed-output').innerHTML = embedOutput;\n  }\n\n  copyData() {\n    let element = document.getElementById('embed-output');\n    if (document.selections) {\n      let range = document.body.createTextRange();\n      range.moveToElementText(element);\n      range.select().createTextRange();\n      document.execCommand('Copy');\n    }\n    else if (window.getSelection) {\n      let range = document.createRange();\n      range.selectNode(element);\n      window.getSelection().addRange(range);\n      document.execCommand('Copy');\n    }\n    else {\n      console.error('Unable to automatically copy the output, please copy it manually');\n    }\n  }\n\n  render() {\n    return(\n      <div className = \"cell\">\n        <div id = \"output-container\">\n          <div className = \"controller\">\n            <button onClick = {() => this.generateEmbedCode()}>\n              <span role=\"img\" aria-label=\"Gear Emoji\">⚙</span>&ensp;Generate Embed Code\n            </button>\n            <button onClick = {() => this.copyData()}>\n              <span role=\"img\" aria-label=\"Copy Emoji\">🔗</span>&ensp;Copy Embed Code\n            </button>\n          </div>\n          <div className=\"output\">\n            <pre><div id=\"embed-output\" readOnly>{JSON.stringify(this.state.embedObject, null, 2)}</div></pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Output;\n","import React from 'react';\nimport Builder from '../Builder';\nimport Output from '../Output';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <main>\n        <Builder />\n        <Output />\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer'\nimport Main from '../Main';\nimport './index.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className='App-container'>\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"__bastion\"));\nregisterServiceWorker();\n","exports.RegEx = {\n  URL: /^(http[s]?:\\/\\/)(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/i,\n  imageURL: /^(https?:\\/\\/)((([-a-z0-9]{1,})?(-?)+[-a-z0-9]{1,})(\\.))+([a-z]{1,63})\\/((([a-z0-9._\\-~#%])+\\/)+)?([a-z0-9._\\-~#%]+)\\.(jpg|jpeg|gif|png|bmp)$/i\n};\n"],"sourceRoot":""}